name: release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: build-linux
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install release tooling
        uses: taiki-e/install-action@v2
        with:
          tool: git-cliff

      - name: Build
        run: cargo build --release

      - name: Generate release notes
        run: git-cliff -c git-cliff.toml -o release-notes.md --tag "${{ github.ref_name }}"

      - name: Package artifacts
        run: |
          set -euo pipefail
          version="${GITHUB_REF_NAME#v}"
          mkdir -p dist
          cp target/release/hyprwhspr-rs dist/hyprwhspr-rs
          (cd dist && tar -czf "hyprwhspr-rs-${version}-x86_64-unknown-linux-gnu.tar.gz" hyprwhspr-rs)
          (cd dist && sha256sum "hyprwhspr-rs-${version}-x86_64-unknown-linux-gnu.tar.gz" > "hyprwhspr-rs-${version}-x86_64-unknown-linux-gnu.tar.gz.sha256")

      - name: Upload workflow artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hyprwhspr-rs-${{ github.ref_name }}
          path: |
            dist/hyprwhspr-rs-*.tar.gz
            dist/hyprwhspr-rs-*.sha256

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/hyprwhspr-rs-*.tar.gz
            dist/hyprwhspr-rs-*.sha256
          body_path: release-notes.md
          prerelease: ${{ contains(github.ref_name, '-') }}

  publish-crate:
    name: publish-crates-io
    runs-on: ubuntu-latest
    needs: build-and-release
    if: ${{ !contains(github.ref_name, '-') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish
